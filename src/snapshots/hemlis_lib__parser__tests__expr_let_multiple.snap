---
source: src/parser.rs
expression: "p_expr(r\"\n            let\n                x = 1\n                x = 1\n                x = 1\n            in 2\n    \")"
---
23 of 23
===
Module
 Header
  MName
   (0, 7)->(0, 11)
  NULL
  (0, 0)->(0, 6)
  (0, 12)->(0, 17)
  Decl::Def
   Name
    (2, 0)->(2, 1)
   GuardedExpr::Unconditional
    Expr::Let
     (3, 12)->(3, 15)
      LetBinding::Name
       Name
        (4, 16)->(4, 17)
       GuardedExpr::Unconditional
        Expr::Number
         Number
          (4, 20)->(4, 21)
      LetBinding::Name
       Name
        (5, 16)->(5, 17)
       GuardedExpr::Unconditional
        Expr::Number
         Number
          (5, 20)->(5, 21)
      LetBinding::Name
       Name
        (6, 16)->(6, 17)
       GuardedExpr::Unconditional
        Expr::Number
         Number
          (6, 20)->(6, 21)
     Expr::Number
      Number
       (7, 15)->(7, 16)
===
