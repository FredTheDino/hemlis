---
source: src/parser.rs
expression: "p_module(r\"\nmodule AccessRight where\n\nf x =\n  let\n    a b =\n      case b of\n        ABC { a } -> 1\n        _ -> 1\n  in 1\n            \")"
---
31 of 31
===
Module
 Header
  QProperName
   NULL
   ProperName
    (1, 7)->(1, 18)
  Decl::Def
   Name
    (3, 0)->(3, 1)
    Binder::Var
     Name
      (3, 2)->(3, 3)
   GuardedExpr::Unconditional
    Expr::Let
     (4, 2)->(4, 5)
      LetBinding::Name
       Name
        (5, 4)->(5, 5)
        Binder::Var
         Name
          (5, 6)->(5, 7)
       GuardedExpr::Unconditional
        Expr::Case
         (6, 6)->(6, 10)
          Expr::Ident
           QName
            NULL
            Name
             (6, 11)->(6, 12)
          CaseBranch
            Binder::App
             Binder::Constructor
              QProperName
               NULL
               ProperName
                (7, 8)->(7, 11)
             Binder::Record
               RecordLabelBinder::Pun
                Name
                 (7, 14)->(7, 15)
           GuardedExpr::Unconditional
            Expr::Number
             Number
              (7, 21)->(7, 22)
          CaseBranch
            Binder::Wildcard
             (8, 8)->(8, 9)
           GuardedExpr::Unconditional
            Expr::Number
             Number
              (8, 13)->(8, 14)
     Expr::Number
      Number
       (9, 5)->(9, 6)
===
