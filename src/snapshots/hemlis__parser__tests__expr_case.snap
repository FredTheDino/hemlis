---
source: src/parser.rs
expression: "p_expr(r\"\n        case 1 + 1 of\n            2 -> foo\n            3 | Just _ <- foo bar -> baz\n                    where\n                        baz = 3\n        \")"
---
33 of 33
===
Module
 Header
  MName
   (0, 7)->(0, 11)
  NULL
  Decl::Def
   Name
    (2, 0)->(2, 1)
   GuardedExpr::Unconditional
    Expr::Case
     (3, 8)->(3, 12)
      Expr::Op
       Expr::Number
        Number
         (3, 13)->(3, 14)
       QOp
        NULL
        Op
         (3, 15)->(3, 16)
       Expr::Number
        Number
         (3, 17)->(3, 18)
      CaseBranch
        Binder::Number
         Number
          (4, 12)->(4, 13)
       GuardedExpr::Unconditional
        Expr::Ident
         QName
          NULL
          Name
           (4, 17)->(4, 20)
      CaseBranch
        Binder::Number
         Number
          (5, 12)->(5, 13)
       GuardedExpr::Guarded
         (
           Guard::Binder
            Binder::App
             Binder::Constructor
              QProperName
               NULL
               ProperName
                (5, 16)->(5, 20)
             Binder::Wildcard
              (5, 21)->(5, 22)
            Expr::App
             Expr::Ident
              QName
               NULL
               Name
                (5, 26)->(5, 29)
             Expr::Ident
              QName
               NULL
               Name
                (5, 30)->(5, 33)
          Expr::Where
           (6, 20)->(6, 25)
           Expr::Ident
            QName
             NULL
             Name
              (5, 37)->(5, 40)
            LetBinding::Name
             Name
              (7, 24)->(7, 27)
             GuardedExpr::Unconditional
              Expr::Number
               Number
                (7, 30)->(7, 31)
         )
===
